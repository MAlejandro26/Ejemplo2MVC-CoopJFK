@helper GridMVCTemplate(string entity)
{

    <link href="~/Content/DataTables/css/jquery.dataTables.min.css" rel="stylesheet" />
    <link href="~/Content/DataTables/css/buttons.dataTables.min.css" rel="stylesheet" />
    <link href="~/Content/DataTableSearch.css" rel="stylesheet" />

    <script type="text/javascript" src="~/Scripts/jquery-3.4.1.js"></script>

    <script type="text/javascript" language="javascript" src="~/Scripts/DataTables/jquery.dataTables.min.js"></script>
    <script type="text/javascript" language="javascript" src="~/Scripts/DataTables/dataTables.buttons.min.js"></script>
    <script type="text/javascript" language="javascript" src="~/scripts/DataTables/buttons.flash.js"></script>
    <script type="text/javascript" language="javascript" src="~/Scripts/DataTables/dataTables.select.min.js"></script>
    <script type="text/javascript" language="javascript" src="~/Scripts/jszip.min.js"></script>
    <script type="text/javascript" language="javascript" src="~/Scripts/buttons.html5.min.js"></script>

    <script src="~/Scripts/pdfmake.min.js"></script>
    <script src="~/Scripts/vfs_fonts.js"></script>

    <script type="text/javascript">
            /* Table initialisation */
            $(document).ready(function () {


                $('#jqueryTable tfoot th').each(function () {
                    var title = $(this).text();
                    $(this).html('<input class="form-control" type="text" style="align: left" placeholder="Buscar por ' + $.trim(title) + '" />');
                });

                var events = $('#events');

                var table = $('#jqueryTable').DataTable({
                    dom: 'Bfrtip',
                    language: {
                        select: {
                            rows: {
                                0: "",
                                1: " │ %d registro seleccionado."
                            }
                        }
                    },
                    select: true,
                    buttons: [{
                        text: 'Nuevo',
                        action: function (e, dt, node, config) {
                            window.location.href = '/@entity/Create';
                        },
                        init: function (api, node, config) {
                            $(node).removeClass('btn-default')
                        }
                    },
                    {
                        text: 'Editar',
                        action: function (e, dt, node, config) {
                            var rowSelected = table.rows({ selected: true }).data();
                            console.log(rowSelected[0][0]);
                            window.location.href = '/@entity/Edit/' + rowSelected[0][0];
                        },
                        init: function (api, node, config) {
                            $(node).removeClass('btn-default')
                        }
                    },
                    {
                        text: 'Detalle',
                        action: function (e, dt, node, config) {
                            var rowSelected = table.rows({ selected: true }).data();
                            console.log(rowSelected[0][0]);
                            window.location.href = '/@entity/Details/' + rowSelected[0][0];
                        },
                        init: function (api, node, config) {
                            $(node).removeClass('btn-default')
                        }
                    },
                    {
                        text: 'Borrar',
                        action: function (e, dt, node, config) {
                            var rowSelected = table.rows({ selected: true }).data();
                            console.log(rowSelected[0][0]);
                            window.location.href = '/@entity/Delete/' + rowSelected[0][0];
                        },
                        init: function (api, node, config) {
                            $(node).removeClass('btn-default')
                        }
                    },
                        'pdf', 'excel'
                    ]
                });
                // Apply the search
                table.columns().every(function () {
                    var that = this;

                    $('input', this.footer()).on('keyup change', function () {
                        if (that.search() !== this.value) {
                            that
                                .search(this.value)
                                .draw();
                        }
                    });
                });
                $('#jqueryTable tfoot tr').appendTo('#jqueryTable thead');
                $("#jqueryTable_wrapper button").each(function () {
                    $(this).removeClass("dt-button");
                    $(this).addClass("btn btn-sm");
                    if ($(this).text() == 'PDF' || $(this).text() == 'Excel') {
                        $(this).addClass("btn-default");
                    }
                    else {
                        $(this).addClass("btn-primary ");
                    }
                });
                $('#jqueryTable_filter input').addClass("form-control");
                $('#jqueryTable tbody').on('dblclick', 'tr', function () {
                    var rowSelected = table.rows({ selected: true }).data();
                    window.location.href = '/@entity/Edit/' + rowSelected[0][0];
                });
            });
    </script>


}